#coding=utf-8
'''
    2018-3-16 16:01:05

    author: chenfei

    结果上报 
'''
import requests
import os
import json
import socket

def report(url, data):
    '''
    上报
    '''
    rs = {
        'flag': True,
        'info': '',
    }
    headers = {'content-type': 'application/json'}
    response = requests.post(url, json=data, headers=headers, timeout=5)
    res = response.json()
    if response.status_code != 200 or res.get('status') != 200:
        rs['flag'] = False
        rs['info'] = res.get('msg', '请求异常！')
    return rs

def get_from_api(url, data=None):
    '''
    获取http api json格式数据
    '''
    rs = {
        'flag': True,
        'info': '',
    }
    if data is None:
        data = {}
    response = requests.get(url, json=data, timeout=5)
    rs['status_code'] = response.status_code
    try:
        res = response.json()
    except:
        res = response.text
    rs['data'] = res
    if rs['status_code'] != 200:
        rs['flag'] = False
    return rs

def post_from_api(url, data, headers=None):
    '''
    post
    '''
    rs = {
        'flag': True,
        'info': '',
    }
    if not headers:
        headers = {'content-type': 'application/json'}
    else:
        headers = headers
    response = requests.post(url, json=data, headers=headers, timeout=5)
    rs['status_code'] = response.status_code
    try:
        res = response.json()
    except:
        res = response.text
    rs['data'] = res
    if response.status_code not in [200, 201]:
        rs['flag'] = False
    return rs

def put_from_api(url, data):
    '''
    create
    '''
    rs = {
        'flag': True,
        'info': '',
    }
    response = requests.put(url, data=data, timeout=5)
    rs['status_code'] = response.status_code
    try:
        res = response.json()
    except:
        res = response.text
    rs['data'] = res
    if response.status_code != 200 or res.get('status') != 200:
        rs['flag'] = False
    return rs

def delete_from_api(url, data=None):
    '''
    create
    '''
    rs = {
        'flag': True,
        'info': '',
    }
    response = requests.delete(url, data=data, timeout=5)
    rs['status_code'] = response.status_code
    try:
        res = response.json()
    except:
        res = response.text
    rs['data'] = res
    if response.status_code != 204:
        rs['flag'] = False
    return rs

def toString(obj):
    '''
    #转换成string类型
    '''
    rs = None
    if isinstance(obj, str):
        rs = '"'+obj+'"'
    elif isinstance(obj, int):
        rs = str(obj)
    elif isinstance(obj, list) or isinstance(obj, tuple):
        rs = '['+','.join(toString(each) for each in obj) + ']'
    elif isinstance(obj, dict):
        rs = json.dumps(obj, encoding='utf-8', ensure_ascii=False, indent=2)
    elif obj is None:
        rs = 'None'
    else:
        rs = '"'+str(obj)+'"'
    return rs

def get_host_ip():
    '''
    获取本机ip
    '''
    # hostname = socket.gethostname()
    # ip = socket.gethostbyname(hostname)
    # return ip
    getip = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    getip.connect(('2.2.2.2', 0))
    ip =  getip.getsockname()[0]
    return ip